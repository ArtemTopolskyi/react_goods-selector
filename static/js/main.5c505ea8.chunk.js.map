{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","addGoodToSelected","good","setState","prevState","updatedSelectedGoods","push","clearSelectedGoodList","removeGoodFromSelected","removingGood","filter","this","goodsListLength","length","className","headerText","slice","toString","replace","createHeader","type","classNames","hidden","onClick","map","key","selected","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAoHaC,M,4MAhHbC,MAAQ,CACNC,cAAe,I,EAGjBC,kBAAoB,SAACC,GACnB,EAAKC,UAAS,SAACC,GACb,IAAMC,EAAoB,YAAOD,EAAUJ,eAI3C,OAFAK,EAAqBC,KAAKJ,GAEnB,CAAEF,cAAeK,O,EAI5BE,sBAAwB,WACtB,EAAKJ,SAAS,CAAEH,cAAe,M,EAGjCQ,uBAAyB,SAACC,GACxB,EAAKN,UAAS,SAACC,GAKb,MAAO,CAAEJ,cAJoB,YAAII,EAAUJ,eAAeU,QACxD,SAAAR,GAAI,OAAIA,IAASO,U,4CAOvB,WAAU,IAAD,OACCT,EAAkBW,KAAKZ,MAAvBC,cACFY,EAAkBZ,EAAca,OAEtC,OACE,yBAAKC,UAAU,OACb,wBAAIA,UAAU,UA4DtB,SAAsBd,EAAeY,GACnC,IAAIG,EAAa,GAGfA,EADsB,IAApBH,EACW,oBACgB,IAApBA,EACC,UAAMZ,EAAc,GAApB,gBAEA,kBACNA,EAAcgB,MAAM,EAAGJ,EAAkB,GAC5CK,WAAWC,QAAQ,KAAM,MAFhB,yBAGAlB,EAAcY,EAAkB,GAHhC,uBAOZ,OAAOG,EA1EEI,CAAanB,EAAeY,IAG/B,4BACEQ,KAAK,SACLN,UAAWO,IAAW,SAAU,CAAEC,OAA4B,IAApBV,IAC1CW,QAAS,WACP,EAAKhB,0BAJT,KAUA,4BACGV,EAAgB2B,KAAI,SAAAtB,GAAI,OACvB,wBAAIuB,IAAKvB,GACP,0BACEY,UACEO,IAAW,YAAa,CACtBK,SAAU1B,EAAc2B,SAASzB,MAIpCA,GAGH,4BACEkB,KAAK,SACLN,UACEO,IAAW,SAAU,CAAEC,OAAQtB,EAAc2B,SAASzB,KAExDqB,QAAS,WACP,EAAKtB,kBAAkBC,KAN3B,UAYA,4BACEkB,KAAK,SACLN,UACEO,IACE,SAAU,CAAEC,QAAStB,EAAc2B,SAASzB,KAGhDqB,QAAS,WACP,EAAKf,uBAAuBN,KARhC,oB,GA1EI0B,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5c505ea8.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: [],\n  };\n\n  addGoodToSelected = (good) => {\n    this.setState((prevState) => {\n      const updatedSelectedGoods = [...prevState.selectedGoods];\n\n      updatedSelectedGoods.push(good);\n\n      return { selectedGoods: updatedSelectedGoods };\n    });\n  }\n\n  clearSelectedGoodList = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  removeGoodFromSelected = (removingGood) => {\n    this.setState((prevState) => {\n      const updatedSelectedGoods = [...prevState.selectedGoods].filter(\n        good => good !== removingGood,\n      );\n\n      return { selectedGoods: updatedSelectedGoods };\n    });\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n    const goodsListLength = selectedGoods.length;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"header\">\n          {createHeader(selectedGoods, goodsListLength)}\n        </h1>\n\n        <button\n          type=\"button\"\n          className={classNames('button', { hidden: goodsListLength === 0 })}\n          onClick={() => {\n            this.clearSelectedGoodList();\n          }}\n        >\n          X\n        </button>\n\n        <ul>\n          {goodsFromServer.map(good => (\n            <li key={good}>\n              <span\n                className={\n                  classNames('good-name', {\n                    selected: selectedGoods.includes(good),\n                  })\n                }\n              >\n                {good}\n              </span>\n\n              <button\n                type=\"button\"\n                className={\n                  classNames('button', { hidden: selectedGoods.includes(good) })\n                }\n                onClick={() => {\n                  this.addGoodToSelected(good);\n                }}\n              >\n                Select\n              </button>\n\n              <button\n                type=\"button\"\n                className={\n                  classNames(\n                    'button', { hidden: !selectedGoods.includes(good) },\n                  )\n                }\n                onClick={() => {\n                  this.removeGoodFromSelected(good);\n                }}\n              >\n                Cancel\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction createHeader(selectedGoods, goodsListLength) {\n  let headerText = '';\n\n  if (goodsListLength === 0) {\n    headerText = 'No goods selected';\n  } else if (goodsListLength === 1) {\n    headerText = `${selectedGoods[0]} is selected`;\n  } else {\n    headerText = `\n      ${selectedGoods.slice(0, goodsListLength - 1)\n    .toString().replace(/,/g, ', ')}\n        and ${selectedGoods[goodsListLength - 1]} are selected\n    `;\n  }\n\n  return headerText;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}