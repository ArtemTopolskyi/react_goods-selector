{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","addGoodToSelected","good","setState","prevState","updatedSelectedGoods","push","removingGood","this","goodIndex","findIndex","item","splice","goodsListLength","length","headerText","slice","toString","replace","className","type","classNames","hidden","onClick","map","key","selected","includes","removeGoodFromSelected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA+GaC,E,4MA3GbC,MAAQ,CACNC,cAAe,I,EAGjBC,kBAAoB,SAACC,GACnB,EAAKC,UAAS,SAACC,GACb,IAAMC,EAAoB,YAAOD,EAAUJ,eAI3C,OAFAK,EAAqBC,KAAKJ,GAEnB,CAAEF,cAAeK,O,4DAI5B,SAAuBE,GACrBC,KAAKL,UAAS,SAACC,GACb,IAAMC,EAAoB,YAAOD,EAAUJ,eACrCS,EAAYJ,EAAqBK,WACrC,SAAAC,GAAI,OAAIA,IAASJ,KAKnB,OAFAF,EAAqBO,OAAOH,EAAW,GAEhC,CAAET,cAAeK,Q,oBAI5B,WAAU,IAAD,OACCL,EAAkBQ,KAAKT,MAAvBC,cACFa,EAAkBb,EAAcc,OAElCC,EAAa,GAcjB,OAXEA,EADsB,IAApBF,EACW,oBACgB,IAApBA,EACC,UAAMb,EAAc,GAApB,gBAEA,oBACNA,EAAcgB,MAAM,EAAGH,EAAkB,GAC9CI,WAAWC,QAAQ,KAAM,MAFd,2BAGAlB,EAAca,EAAkB,GAHhC,yBAQV,yBAAKM,UAAU,OACb,wBAAIA,UAAU,UACXJ,GAGH,4BACEK,KAAK,SACLD,UAAWE,IAAW,SAAU,CAAEC,OAA4B,IAApBT,IAC1CU,QAAS,WACP,EAAKpB,SAAS,CAAEH,cAAe,OAJnC,KAUA,4BACGH,EAAgB2B,KAAI,SAAAtB,GAAI,OACvB,wBAAIuB,IAAKvB,GACP,0BACEiB,UACEE,IAAW,YAAa,CACtBK,SAAU1B,EAAc2B,SAASzB,MAIpCA,GAGH,4BACEkB,KAAK,SACLD,UACEE,IAAW,SAAU,CAAEC,OAAQtB,EAAc2B,SAASzB,KAExDqB,QAAS,WACP,EAAKtB,kBAAkBC,KAN3B,UAYA,4BACEkB,KAAK,SACLD,UACEE,IACE,SAAU,CAAEC,QAAStB,EAAc2B,SAASzB,KAGhDqB,QAAS,WACP,EAAKK,uBAAuB1B,KARhC,oB,GAvFI2B,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.721a6d6b.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: [],\n  };\n\n  addGoodToSelected = (good) => {\n    this.setState((prevState) => {\n      const updatedSelectedGoods = [...prevState.selectedGoods];\n\n      updatedSelectedGoods.push(good);\n\n      return { selectedGoods: updatedSelectedGoods };\n    });\n  }\n\n  removeGoodFromSelected(removingGood) {\n    this.setState((prevState) => {\n      const updatedSelectedGoods = [...prevState.selectedGoods];\n      const goodIndex = updatedSelectedGoods.findIndex(\n        item => item === removingGood,\n      );\n\n      updatedSelectedGoods.splice(goodIndex, 1);\n\n      return { selectedGoods: updatedSelectedGoods };\n    });\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n    const goodsListLength = selectedGoods.length;\n\n    let headerText = '';\n\n    if (goodsListLength === 0) {\n      headerText = 'No goods selected';\n    } else if (goodsListLength === 1) {\n      headerText = `${selectedGoods[0]} is selected`;\n    } else {\n      headerText = `\n        ${selectedGoods.slice(0, goodsListLength - 1)\n    .toString().replace(/,/g, ', ')}\n          and ${selectedGoods[goodsListLength - 1]} are selected\n      `;\n    }\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"header\">\n          {headerText}\n        </h1>\n\n        <button\n          type=\"button\"\n          className={classNames('button', { hidden: goodsListLength === 0 })}\n          onClick={() => {\n            this.setState({ selectedGoods: [] });\n          }}\n        >\n          X\n        </button>\n\n        <ul>\n          {goodsFromServer.map(good => (\n            <li key={good}>\n              <span\n                className={\n                  classNames('good-name', {\n                    selected: selectedGoods.includes(good),\n                  })\n                }\n              >\n                {good}\n              </span>\n\n              <button\n                type=\"button\"\n                className={\n                  classNames('button', { hidden: selectedGoods.includes(good) })\n                }\n                onClick={() => {\n                  this.addGoodToSelected(good);\n                }}\n              >\n                Select\n              </button>\n\n              <button\n                type=\"button\"\n                className={\n                  classNames(\n                    'button', { hidden: !selectedGoods.includes(good) },\n                  )\n                }\n                onClick={() => {\n                  this.removeGoodFromSelected(good);\n                }}\n              >\n                Cancel\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}